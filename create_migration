LATEST=$(ls *.migration 2>/dev/null | sort | tail -n1 | sed 's/0*\([0-9][0-9]*\).*/\1/g')
test -n "$LATEST" || LATEST=0

CURRENT=$(( $LATEST + 1 ))

NAME=$(printf "%04d-$1.migration" $CURRENT)

cat<<EOF>>$NAME

# put your desired migration in this function
function migration_up_$(printf "%04d" $CURRENT)() {
  execute "CREATE TABLE foo (id INT PRIMARY KEY, name VARCHAR(255))"
  execute "ALTER TABLE foo ADD COLUMN address VARCHAR(500);"
}

# put your counter migration in this function -- opposite order
function migration_down_$(printf "%04d" $CURRENT)() {
  execute "ALTER TABLE foo DROP COLUMN address;"
  execute "DROP TABLE foo;"
}

# examples:
# up:   execute "CREATE TABLE foo (id INT PRIMARY KEY, name VARCHAR(255)"
# down: execute "DROP TABLE foo"
#
# up:   execute "ALTER TABLE foo ADD COLUMN address VARCHAR(500);"
# down: execute "ALTER TABLE foo DROP COLUMN address;"


# resources:
# http://dev.mysql.com/doc/refman/5.1/en/create-table.html 


EOF

${EDITOR-vi} $NAME
